# Configure the SmallRye Kafka connector


# Configure the Kafka sink (we write to it)
mp.messaging.outgoing.generated-price.connector=smallrye-kafka
mp.messaging.outgoing.generated-price.topic=prices
mp.messaging.incoming.prices.health-readiness-enabled=false
mp.messaging.outgoing.generated-price.value.serializer=org.apache.kafka.common.serialization.IntegerSerializer

# Configure the Kafka source (we read from it)
mp.messaging.incoming.prices.connector=smallrye-kafka
mp.messaging.incoming.prices.value.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer


# Setup access from OCP kafka: https://docs.google.com/document/d/1U4uNx1KuHpJc5JSFdtzczL7hud_RvPtYr_OIHs5b6qQ/edit
kafka.bootstrap.servers=${KAFKA_BOOTSTRAP_SERVER}
kafka.security.protocol=SSL
kafka.ssl.keystore.location=${CERTS_DIR}/keystore.jks
kafka.ssl.keystore.password=${CERTS_PASSWORD}
kafka.ssl.truststore.location=${CERTS_DIR}/truststore.jks
kafka.ssl.truststore.password=${CERTS_PASSWORD}


# For managed Kafka (based on OAUTH)

# kafka.bootstrap.servers=....kafka.rhcloud.com:443
# kafka.security.protocol=SASL_SSL
# kafka.sasl.mechanism=OAUTHBEARER
# kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
#   oauth.client.id="client-id" \
#   oauth.client.secret="client-secret" \
#   oauth.token.endpoint.uri="https://identity.api.openshift.com/auth/realms/rhoas/protocol/openid-connect/token" ;
# kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler

